@page "/ethor/details/{entityId}"
@using eThorWebApp.Shared.Models
@inject HttpClient Http
@inject IUriHelper UriHelper

@if(Entity!=null)
{
    <Modal data-bind="entityId" IsOpen="@IsModalOpen" IsCentered="true">
        <ModalHeader>
            <Breadcrumb>
                <BreadcrumbItem><a href="#">Ehor</a></BreadcrumbItem>
                <BreadcrumbItem IsActive="true">Edit</BreadcrumbItem>
            </Breadcrumb>
        </ModalHeader>
        <ModalBody>
            <BlazorTable class="table" IsSmall="true" IsHovarable="true">
                <thead>
                    <tr>
                        <th scope="col">Id</th>
                        <th scope="col">Name</th>
                        <th scope="col">HardProperty</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Entity.Id</td>
                        <td>@Entity.Name</td>
                        <td>
                            <blockquote class="blockquote">
                                <ol>
                                    @foreach (var property in Entity.HardPropertyList)
                                    {
                                        <li>@property</li>
                                    }
                                </ol>
                            </blockquote>
                        </td>
                    </tr>
                </tbody>
            </BlazorTable>
        </ModalBody>
        <ModalFooter>
            <BlazorButton Color="Color.Link" OnClick="@goBack" data-dismiss="modal">Back to Index</BlazorButton>
        </ModalFooter>
    </Modal>
}



@functions {

    private eThorTestEntity Entity { get; set; } = null;

    [Parameter]
    public int? entityId { get; set; } = null;

    bool IsModalOpen { get; set; }
    private async Task onViewDetails(UIMouseEventArgs e)
    {
        if (entityId != null)
        {
            Entity = await Http.GetJsonAsync<eThorTestEntity>("api/eThorEntity/" + entityId.ToString());
            IsModalOpen = !IsModalOpen;
        }

        StateHasChanged();
    }

    void goBack()
    {
        UriHelper.NavigateTo("user/signin", true);
    }
}
