@page "/ethor/create"
@using eThorWebApp.Shared.Models
@inject HttpClient Http


    <Modal data-bind="entityId" IsOpen="@IsModalOpen" IsCentered="true">
        <ModalHeader>
            <Breadcrumb>
                <BreadcrumbItem><a href="#">Ehor</a></BreadcrumbItem>
                <BreadcrumbItem IsActive="true">Edit</BreadcrumbItem>
            </Breadcrumb>
        </ModalHeader>
        <ModalBody>
            <BlazorForm>
                <FormGroup>
                    <BlazorLabel For="Id">Id</BlazorLabel>
                    <BlazorInput Id="Id" InputType="InputType.Text" Value="@Entity.Id.ToString()" />

                    <BlazorLabel For="Name">Name</BlazorLabel>
                    <BlazorInput Id="Name" InputType="InputType.Text" Value="@Entity.Name" />

                    <BlazorLabel For="HardProperty"></BlazorLabel>
                    <BlazorInput Id="HardPropertyList" InputType="InputType.TextArea">

                    </BlazorInput>
                </FormGroup>
            </BlazorForm>
        </ModalBody>
        <ModalFooter>
            <BlazorButton Color="Color.Secondary" data-dismiss="modal">Close</BlazorButton>
            <BlazorButton Color="Color.Primary" OnClick="@onSaveEntity">Save Changes</BlazorButton>
        </ModalFooter>
    </Modal>

@functions {

    private eThorTestEntity Entity { get; set; } = null;

    [Parameter]
    public int? entityId { get; set; } = null;

    bool IsModalOpen { get; set; }
    private async Task onViewDetails(UIMouseEventArgs e)
    {
        if (entityId != null)
        {
            Entity = await Http.GetJsonAsync<eThorTestEntity>("api/eThorEntity/" + entityId.ToString());
            IsModalOpen = !IsModalOpen;
        }

        StateHasChanged();
    }

    void onSaveEntity(UIMouseEventArgs e)
    {
        StateHasChanged();
    }

}